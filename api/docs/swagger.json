{
    "swagger": "2.0",
    "info": {
        "description": "Diploma RAG API service documentation.",
        "title": "Diploma API",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/larek-tech/diploma/blob/api/LICENSE"
        },
        "version": "1.0"
    },
    "host": "localhost:9000",
    "basePath": "/",
    "paths": {
        "/api/v1/domain/": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update source information or params for update job.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Update source.",
                "parameters": [
                    {
                        "description": "Update params",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateSourceRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Source updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Failed to update source",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates new domain source used for RAG vector search.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Create new source.",
                "parameters": [
                    {
                        "description": "Input data for creating source",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateSourceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Source successfully created",
                        "schema": {
                            "$ref": "#/definitions/pb.CreateSourceResponse"
                        }
                    },
                    "400": {
                        "description": "Failed to create source",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/domain/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List sources to which user has access.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "List sources.",
                "responses": {
                    "200": {
                        "description": "List of sources",
                        "schema": {
                            "$ref": "#/definitions/pb.ListSourcesResponse"
                        }
                    },
                    "400": {
                        "description": "Failed to list sources",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/domain/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns information about source and its update parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Get source.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Requested source ID",
                        "name": "sourceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Source",
                        "schema": {
                            "$ref": "#/definitions/pb.GetSourceResponse"
                        }
                    },
                    "400": {
                        "description": "Failed to get source",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Source not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete domain source by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Delete source.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Source ID",
                        "name": "sourceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Source deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Failed to delete source",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/v1/login": {
            "post": {
                "description": "Authorizes user with provided credentials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user.",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Auth token and metadata",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "pb.CreateSourceRequest": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/definitions/pb.Source"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "pb.CreateSourceResponse": {
            "type": "object",
            "properties": {
                "sourceId": {
                    "type": "integer"
                }
            }
        },
        "pb.GetSourceResponse": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/definitions/pb.Source"
                }
            }
        },
        "pb.ListSourcesResponse": {
            "type": "object",
            "properties": {
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Source"
                    }
                }
            }
        },
        "pb.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "pb.LoginResponse": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/pb.UserAuthMetadata"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.Source": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "credentials": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                },
                "typ": {
                    "$ref": "#/definitions/pb.SourceType"
                },
                "updateParams": {
                    "$ref": "#/definitions/pb.UpdateParams"
                }
            }
        },
        "pb.SourceType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "SourceType_UNDEFINED_SOURCE_TYPE",
                "SourceType_WEB_SOURCE",
                "SourceType_SINGLE_FILE",
                "SourceType_ARCHIVED_FILES",
                "SourceType_WITH_CREDENTIALS"
            ]
        },
        "pb.UpdateParams": {
            "type": "object",
            "properties": {
                "everyPeriod": {
                    "type": "integer"
                },
                "onTime": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                }
            }
        },
        "pb.UpdateSourceRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "credentials": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sourceId": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updateParams": {
                    "$ref": "#/definitions/pb.UpdateParams"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "pb.UserAuthMetadata": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "timestamppb.Timestamp": {
            "type": "object",
            "properties": {
                "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive.",
                    "type": "integer"
                },
                "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}