services:
  postgres:
    build:
      context: ../data
      dockerfile: docker/postgres.Dockerfile
    container_name: postgres_local
    restart: unless-stopped
    env_file:
      - configs/data.migrator.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-master}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrator:
    build:
      context: ../data
      dockerfile: docker/migrator.Dockerfile
    container_name: migrator_local
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
        - configs/data.migrator.env
    environment:
      POSTGRES_DB: ${MIGRATOR_POSTGRES_DB:-master}
      POSTGRES_HOST: ${MIGRATOR_POSTGRES_HOST:-postgres_local}
      POSTGRES_PORT: ${MIGRATOR_POSTGRES_PORT:-5432}
      POSTGRES_USER: ${MIGRATOR_POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${MIGRATOR_POSTGRES_PASSWORD:-password}

  crawler:
    build:
      context: ../data
      dockerfile: docker/crawler.Dockerfile
    container_name: crawler_local
    restart: unless-stopped
    depends_on:
      - postgres
    env_file:
        - configs/data.crawler.env
    ports:
      - "9998:8080"
      - "50051:50051"
  parser:
    build:
      context: ../data
      dockerfile: docker/parser.Dockerfile
    container_name: parser_local
    restart: unless-stopped
    depends_on:
      - postgres
    env_file:
        - configs/data.parser.env
    environment:
      KAFKA_SERVERS: ${PARSER_KAFKA_SERVERS:-kafka:29092}
      POSTGRES_DB: ${PARSER_POSTGRES_DB:-master}
      POSTGRES_HOST: ${PARSER_POSTGRES_HOST:-postgres_local}
      POSTGRES_PORT: ${PARSER_POSTGRES_PORT:-5432}
      POSTGRES_USER: ${PARSER_POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${PARSER_POSTGRES_PASSWORD:-password}
      OLLAMA_LLM_ENDPOINT: ${PARSER_OLLAMA_LLM_ENDPOINT:-http://ollama:11434}
      OLLAMA_LLM_MODEL: ${PARSER_OLLAMA_LLM_MODEL:-llama3.2}
      OLLAMA_EMBEDDER_ENDPOINT: ${PARSER_OLLAMA_EMBEDDER_ENDPOINT:-http://ollama:11434}
      OLLAMA_EMBEDDER_MODEL: ${PARSER_OLLAMA_EMBEDDER_MODEL:-bge-m3:latest}
      S3_ENDPOINT: ${PARSER_S3_ENDPOINT:-s3:9000}
      S3_ACCESS_KEY_ID: ${PARSER_S3_ACCESS_KEY_ID:-minio}
      S3_SECRET_ACCESS_KEY: ${PARSER_S3_SECRET_ACCESS_KEY:-minio123}
    ports:
      - "9999:8081"



volumes:
  postgres_data:
