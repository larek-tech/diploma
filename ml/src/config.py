import os
from pathlib import Path

import dotenv

from utils.logger import logger

dotenv_path = Path(__file__).parents[1] / ".env"
logger.info(dotenv_path)
dotenv.load_dotenv(dotenv_path)

OLLAMA_BASE_URL = os.getenv("OLLAMA_BASE_URL")
GIGA_CHAT_API_KEY = os.getenv("GIGA_CHAT_API_KEY")
DEVICE = os.getenv("DEVICE")
DATA_SERVICE_PORT = os.getenv("DATA_SERVICE_PORT")
DATA_SERVICE_HOST = os.getenv("DATA_SERVICE_HOST")
DEFAULT_RERANKER_NAME = os.environ["DEFAULT_RERANKER_NAME"]
ML_SERVICE_PORT = os.getenv("ML_SERVICE_PORT")
HF_TOKEN = os.getenv("HF_TOKEN")
DEFAULT_REDIS_URL = os.getenv("DEFAULT_REDIS_URL")
DEFAULT_EMBEDER_MODEL = os.getenv("DEFAULT_EMBEDER_MODEL")
OLLAMA_BASE_MODEL = os.getenv("OLLAMA_BASE_MODEL")
NUM_CTX = os.getenv("NUM_CTX")

MULTI_QUESTION_PROMPT = """
Переформулируй вопрос: {query}. Предложите {n_questions} различных вариантов, которые помогут рассмотреть тему с разных сторон.
Требования:
Каждая версия вопроса должна сохранять исходный смысл, но использовать уникальные формулировки, стили (например, аналитический, гипотетический, практический) или акценты (например, на причину, последствия, примеры).
Избегайте простого перефразирования — стремитесь к разнообразию контекстов и аудиторий (например, для эксперта, новичка, студента).
Оформите ответ в виде нумерованного списка.
Пример:
Если исходный вопрос: «Почему небо голубое?», варианты могут быть:
«Какие физические явления приводят к голубому цвету неба?»
«Как объяснить ребенку, почему небо выглядит голубым?»
«Менялся ли цвет неба в истории Земли и почему?»
"""

RAG_PROMPT = """
Вы — интеллектуальный RAG-ассистент, специализирующийся на поиске и синтезе информации. Ваша задача — давать точные, информативные ответы, основанные исключительно на предоставленном контексте.
Строго следуйте этим правилам:
1. Анализ контекста:
   - Тщательно изучите все предоставленные документы
   - Выявляйте только релевантные фрагменты, непосредственно относящиеся к вопросу
   - Игнорируйте любую информацию, не подтвержденную контекстом
2. Формирование ответа:
   - Ответ должен быть четким, структурированным и полностью соответствовать контексту
   - Сохраняйте нейтральный, профессиональный тон
   - Если информация в контексте противоречива — укажите на это
   - Если ответ требует нескольких шагов — используйте нумерованный список
   - Приводите конкретные данные, цифры и примеры из контекста
3. Обработка отсутствующей информации:
   - Если в контексте нет ответа на вопрос — так и скажите
   - Не придумывайте информацию и не делайте предположений
Теперь обработайте запрос:
Вопрос: {query}
Контекст: {docs}
"""


QA_PROMPT_TEMPLATE = """
Ты — интеллектуальный ассистент, который анализирует текст и формулирует самые информативные вопросы и точные, лаконичные ответы на его основе.  
Инструкции:
1. Внимательно проанализируй предоставленный текст.  
2. Сгенерируй ключевые вопросы, которые:  
   - Лучше всего отражает суть текста,  
   - Имеет практическую или познавательную ценность,  
   - Не слишком общие (избегай вопросов вроде "О чем этот текст?").  
3. Дай четкий ответ на этот вопрос, используя информацию из текста. 
Формат ответа:
Вопрос: <вопрос>
Ответ: <ответ>
Примеры:
1. Текст: "Кислород (O₂) необходим для дыхания большинства живых организмов. В воде его концентрация ниже, чем в воздухе, поэтому рыбы используют жабры для эффективного извлечения кислорода."  
   - Вопрос: Почему рыбы используют жабры вместо легких?  
   - Ответ: Потому что концентрация кислорода в воде ниже, чем в воздухе, и жабры эффективнее его извлекают.  
2. Текст: "Оптимизация SQL-запросов включает индексацию таблиц, избегание SELECT * и использование EXPLAIN для анализа выполнения."  
   - Вопрос: Какие основные методы оптимизации SQL-запросов?  
   - Ответ: Индексация таблиц, отказ от SELECT * и анализ запросов с помощью EXPLAIN.  
Теперь обработай текст: 
 	{chunk}
"""


FIRST_MESSAE_PROMPT = """
Ты — интеллектуальный ассистент, помогающий пользователям создавать информативные и лаконичные названия чатов и их описания.  
Инструкции.
1. На основе вопроса или сообщения пользователя придумай название чата (до 5-7 слов), которое отражает его суть.  
2. Название и описание должны быть:  
   - Понятными и конкретными  
   - Без лишних слов или общих фраз 
Примеры:
- Вопрос: *"Как оптимизировать бюджет в малом бизнесе?"*  
  Название: *Оптимизация бюджета для малого бизнеса*   
- Вопрос: *"Python: как работать с API Google Sheets?"*  
  Название: *Python и Google Sheets API*   
Теперь обработай запрос:  
{message}
"""


JSON_SCHEMA = {
  "title": "Титульное сообщение для начала чата.",
  "description": "Тема для чата.",
  "type": "object",
  "properties": {
    "chat_title": {
      "type": "string",
      "description": "На основе вопроса или сообщения пользователя придумай название чата (до 5-7 слов), которое отражает его суть.",
    }
  },
  "required": ["chat_title"],
  "additionalProperties": False
}