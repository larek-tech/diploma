services:
  postgres:
    build:
      context: .
      dockerfile: docker/postgres.Dockerfile
    container_name: postgres_local
    restart: unless-stopped
    env_file:
      - local.env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: master
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrator:
    build:
      context: .
      dockerfile: docker/migrator.Dockerfile
    container_name: migrator_local
    depends_on:
      - postgres
    env_file:
        - local.env
    environment:
      POSTGRES_DB: master
      POSTGRES_HOST: postgres_local
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password

  ollama:
    build:
        context: .
        dockerfile: docker/ollama.Dockerfile
    container_name: ollama_local
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
        - ollama_data:/root/.ollama
    env_file:
        - local.env
    environment:
      OLLAMA_KEEP_ALIVE: 24h
      # OLLAMA_CONTEXT_LENGTH: 8192 can be used in order to control the context length for all models otherwise set up in embedder / llm related configs
    healthcheck:
      test: "bash -c 'cat < /dev/null > /dev/tcp/localhost/11434'"
      interval: 5s

  crawler:
    build:
      context: .
      dockerfile: docker/crawler.Dockerfile
    container_name: crawler_local
    restart: unless-stopped
    depends_on:
      - postgres
    env_file:
        - local.env
    environment:
      POSTGRES_DB: master
      POSTGRES_HOST: postgres_local
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      OLLAMA_HOST: http://ollama_local:11434
      OLLAMA_MODEL: bge-m3:latest
      KAFKA_SERVERS: kafka:29092
      KAFKA_TOPIC: source_topic

    ports:
      - "9998:8080"
  parser:
    build:
      context: .
      dockerfile: docker/parser.Dockerfile
    container_name: parser_local
    restart: unless-stopped
    depends_on:
      - postgres
      - ollama
    env_file:
        - local.env
    environment:
      POSTGRES_DB: master
      POSTGRES_HOST: postgres_local
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      OLLAMA_LLM_ENDPOINT: http://ollama_local:11434
      OLLAMA_LLM_MODEL: llama3.2
      OLLAMA_EMBEDDER_ENDPOINT: http://ollama_local:11434
      OLLAMA_EMBEDDER_MODEL: bge-m3:latest
    ports:
      - "9999:8081"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper_local
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka_local
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://kafka:29092,LISTENER_EXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"


volumes:
  postgres_data:
  ollama_data: