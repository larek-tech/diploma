// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: ml/v1/model.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MultiQuery struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UseMultiquery  bool                   `protobuf:"varint,1,opt,name=useMultiquery,proto3" json:"useMultiquery,omitempty"`
	NQueries       int64                  `protobuf:"varint,2,opt,name=nQueries,proto3" json:"nQueries,omitempty"`                  // Количество перефразированных вопросов
	QueryModelName *string                `protobuf:"bytes,3,opt,name=queryModelName,proto3,oneof" json:"queryModelName,omitempty"` //
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MultiQuery) Reset() {
	*x = MultiQuery{}
	mi := &file_ml_v1_model_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiQuery) ProtoMessage() {}

func (x *MultiQuery) ProtoReflect() protoreflect.Message {
	mi := &file_ml_v1_model_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiQuery.ProtoReflect.Descriptor instead.
func (*MultiQuery) Descriptor() ([]byte, []int) {
	return file_ml_v1_model_proto_rawDescGZIP(), []int{0}
}

func (x *MultiQuery) GetUseMultiquery() bool {
	if x != nil {
		return x.UseMultiquery
	}
	return false
}

func (x *MultiQuery) GetNQueries() int64 {
	if x != nil {
		return x.NQueries
	}
	return 0
}

func (x *MultiQuery) GetQueryModelName() string {
	if x != nil && x.QueryModelName != nil {
		return *x.QueryModelName
	}
	return ""
}

type Reranker struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UseRerank         bool                   `protobuf:"varint,1,opt,name=useRerank,proto3" json:"useRerank,omitempty"`
	RerankerModel     string                 `protobuf:"bytes,2,opt,name=rerankerModel,proto3" json:"rerankerModel,omitempty"`
	RerankerMaxLength int64                  `protobuf:"varint,3,opt,name=rerankerMaxLength,proto3" json:"rerankerMaxLength,omitempty"`
	TopK              int64                  `protobuf:"varint,4,opt,name=topK,proto3" json:"topK,omitempty"` // Количество чанков после реранкинга
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Reranker) Reset() {
	*x = Reranker{}
	mi := &file_ml_v1_model_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reranker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reranker) ProtoMessage() {}

func (x *Reranker) ProtoReflect() protoreflect.Message {
	mi := &file_ml_v1_model_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reranker.ProtoReflect.Descriptor instead.
func (*Reranker) Descriptor() ([]byte, []int) {
	return file_ml_v1_model_proto_rawDescGZIP(), []int{1}
}

func (x *Reranker) GetUseRerank() bool {
	if x != nil {
		return x.UseRerank
	}
	return false
}

func (x *Reranker) GetRerankerModel() string {
	if x != nil {
		return x.RerankerModel
	}
	return ""
}

func (x *Reranker) GetRerankerMaxLength() int64 {
	if x != nil {
		return x.RerankerMaxLength
	}
	return 0
}

func (x *Reranker) GetTopK() int64 {
	if x != nil {
		return x.TopK
	}
	return 0
}

type LlmModel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelName     string                 `protobuf:"bytes,1,opt,name=modelName,proto3" json:"modelName,omitempty"`
	Temperature   float32                `protobuf:"fixed32,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	TopK          int64                  `protobuf:"varint,3,opt,name=topK,proto3" json:"topK,omitempty"`
	TopP          float32                `protobuf:"fixed32,4,opt,name=topP,proto3" json:"topP,omitempty"`
	SystemPrompt  string                 `protobuf:"bytes,5,opt,name=systemPrompt,proto3" json:"systemPrompt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LlmModel) Reset() {
	*x = LlmModel{}
	mi := &file_ml_v1_model_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LlmModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LlmModel) ProtoMessage() {}

func (x *LlmModel) ProtoReflect() protoreflect.Message {
	mi := &file_ml_v1_model_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LlmModel.ProtoReflect.Descriptor instead.
func (*LlmModel) Descriptor() ([]byte, []int) {
	return file_ml_v1_model_proto_rawDescGZIP(), []int{2}
}

func (x *LlmModel) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *LlmModel) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *LlmModel) GetTopK() int64 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *LlmModel) GetTopP() float32 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *LlmModel) GetSystemPrompt() string {
	if x != nil {
		return x.SystemPrompt
	}
	return ""
}

type VectorSearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopN          int64                  `protobuf:"varint,1,opt,name=topN,proto3" json:"topN,omitempty"` // Сколько чанков забирать при векторном поиске.
	Threshold     float32                `protobuf:"fixed32,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
	SearchByQuery bool                   `protobuf:"varint,3,opt,name=searchByQuery,proto3" json:"searchByQuery,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VectorSearch) Reset() {
	*x = VectorSearch{}
	mi := &file_ml_v1_model_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VectorSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorSearch) ProtoMessage() {}

func (x *VectorSearch) ProtoReflect() protoreflect.Message {
	mi := &file_ml_v1_model_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorSearch.ProtoReflect.Descriptor instead.
func (*VectorSearch) Descriptor() ([]byte, []int) {
	return file_ml_v1_model_proto_rawDescGZIP(), []int{3}
}

func (x *VectorSearch) GetTopN() int64 {
	if x != nil {
		return x.TopN
	}
	return 0
}

func (x *VectorSearch) GetThreshold() float32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *VectorSearch) GetSearchByQuery() bool {
	if x != nil {
		return x.SearchByQuery
	}
	return false
}

type Scenario struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MultiQuery    *MultiQuery            `protobuf:"bytes,2,opt,name=multiQuery,proto3,oneof" json:"multiQuery,omitempty"`
	Reranker      *Reranker              `protobuf:"bytes,3,opt,name=reranker,proto3,oneof" json:"reranker,omitempty"`
	VectorSearch  *VectorSearch          `protobuf:"bytes,4,opt,name=vectorSearch,proto3,oneof" json:"vectorSearch,omitempty"`
	Model         *LlmModel              `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Scenario) Reset() {
	*x = Scenario{}
	mi := &file_ml_v1_model_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scenario) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scenario) ProtoMessage() {}

func (x *Scenario) ProtoReflect() protoreflect.Message {
	mi := &file_ml_v1_model_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scenario.ProtoReflect.Descriptor instead.
func (*Scenario) Descriptor() ([]byte, []int) {
	return file_ml_v1_model_proto_rawDescGZIP(), []int{4}
}

func (x *Scenario) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Scenario) GetMultiQuery() *MultiQuery {
	if x != nil {
		return x.MultiQuery
	}
	return nil
}

func (x *Scenario) GetReranker() *Reranker {
	if x != nil {
		return x.Reranker
	}
	return nil
}

func (x *Scenario) GetVectorSearch() *VectorSearch {
	if x != nil {
		return x.VectorSearch
	}
	return nil
}

func (x *Scenario) GetModel() *LlmModel {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *Scenario) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Scenario) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Query struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_ml_v1_model_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_ml_v1_model_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_ml_v1_model_proto_rawDescGZIP(), []int{5}
}

func (x *Query) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Query) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Query) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ProcessQueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         *Query                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Scenario      *Scenario              `protobuf:"bytes,2,opt,name=scenario,proto3" json:"scenario,omitempty"`
	SourceIds     []string               `protobuf:"bytes,3,rep,name=sourceIds,proto3" json:"sourceIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessQueryRequest) Reset() {
	*x = ProcessQueryRequest{}
	mi := &file_ml_v1_model_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessQueryRequest) ProtoMessage() {}

func (x *ProcessQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_v1_model_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessQueryRequest.ProtoReflect.Descriptor instead.
func (*ProcessQueryRequest) Descriptor() ([]byte, []int) {
	return file_ml_v1_model_proto_rawDescGZIP(), []int{6}
}

func (x *ProcessQueryRequest) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ProcessQueryRequest) GetScenario() *Scenario {
	if x != nil {
		return x.Scenario
	}
	return nil
}

func (x *ProcessQueryRequest) GetSourceIds() []string {
	if x != nil {
		return x.SourceIds
	}
	return nil
}

type Chunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	mi := &file_ml_v1_model_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_ml_v1_model_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_ml_v1_model_proto_rawDescGZIP(), []int{7}
}

func (x *Chunk) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ProcessQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         *Chunk                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	SourceIds     []string               `protobuf:"bytes,2,rep,name=sourceIds,proto3" json:"sourceIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessQueryResponse) Reset() {
	*x = ProcessQueryResponse{}
	mi := &file_ml_v1_model_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessQueryResponse) ProtoMessage() {}

func (x *ProcessQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_v1_model_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessQueryResponse.ProtoReflect.Descriptor instead.
func (*ProcessQueryResponse) Descriptor() ([]byte, []int) {
	return file_ml_v1_model_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessQueryResponse) GetChunk() *Chunk {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *ProcessQueryResponse) GetSourceIds() []string {
	if x != nil {
		return x.SourceIds
	}
	return nil
}

var File_ml_v1_model_proto protoreflect.FileDescriptor

const file_ml_v1_model_proto_rawDesc = "" +
	"\n" +
	"\x11ml/v1/model.proto\x12\x05pb.ml\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8e\x01\n" +
	"\n" +
	"MultiQuery\x12$\n" +
	"\ruseMultiquery\x18\x01 \x01(\bR\ruseMultiquery\x12\x1a\n" +
	"\bnQueries\x18\x02 \x01(\x03R\bnQueries\x12+\n" +
	"\x0equeryModelName\x18\x03 \x01(\tH\x00R\x0equeryModelName\x88\x01\x01B\x11\n" +
	"\x0f_queryModelName\"\x90\x01\n" +
	"\bReranker\x12\x1c\n" +
	"\tuseRerank\x18\x01 \x01(\bR\tuseRerank\x12$\n" +
	"\rrerankerModel\x18\x02 \x01(\tR\rrerankerModel\x12,\n" +
	"\x11rerankerMaxLength\x18\x03 \x01(\x03R\x11rerankerMaxLength\x12\x12\n" +
	"\x04topK\x18\x04 \x01(\x03R\x04topK\"\x96\x01\n" +
	"\bLlmModel\x12\x1c\n" +
	"\tmodelName\x18\x01 \x01(\tR\tmodelName\x12 \n" +
	"\vtemperature\x18\x02 \x01(\x02R\vtemperature\x12\x12\n" +
	"\x04topK\x18\x03 \x01(\x03R\x04topK\x12\x12\n" +
	"\x04topP\x18\x04 \x01(\x02R\x04topP\x12\"\n" +
	"\fsystemPrompt\x18\x05 \x01(\tR\fsystemPrompt\"f\n" +
	"\fVectorSearch\x12\x12\n" +
	"\x04topN\x18\x01 \x01(\x03R\x04topN\x12\x1c\n" +
	"\tthreshold\x18\x02 \x01(\x02R\tthreshold\x12$\n" +
	"\rsearchByQuery\x18\x03 \x01(\bR\rsearchByQuery\"\x8a\x03\n" +
	"\bScenario\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x126\n" +
	"\n" +
	"multiQuery\x18\x02 \x01(\v2\x11.pb.ml.MultiQueryH\x00R\n" +
	"multiQuery\x88\x01\x01\x120\n" +
	"\breranker\x18\x03 \x01(\v2\x0f.pb.ml.RerankerH\x01R\breranker\x88\x01\x01\x12<\n" +
	"\fvectorSearch\x18\x04 \x01(\v2\x13.pb.ml.VectorSearchH\x02R\fvectorSearch\x88\x01\x01\x12%\n" +
	"\x05model\x18\x05 \x01(\v2\x0f.pb.ml.LlmModelR\x05model\x128\n" +
	"\tcreatedAt\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x128\n" +
	"\tupdatedAt\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtB\r\n" +
	"\v_multiQueryB\v\n" +
	"\t_rerankerB\x0f\n" +
	"\r_vectorSearch\"I\n" +
	"\x05Query\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\x03R\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"\x84\x01\n" +
	"\x13ProcessQueryRequest\x12\"\n" +
	"\x05query\x18\x01 \x01(\v2\f.pb.ml.QueryR\x05query\x12+\n" +
	"\bscenario\x18\x02 \x01(\v2\x0f.pb.ml.ScenarioR\bscenario\x12\x1c\n" +
	"\tsourceIds\x18\x03 \x03(\tR\tsourceIds\"!\n" +
	"\x05Chunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\"X\n" +
	"\x14ProcessQueryResponse\x12\"\n" +
	"\x05chunk\x18\x01 \x01(\v2\f.pb.ml.ChunkR\x05chunk\x12\x1c\n" +
	"\tsourceIds\x18\x02 \x03(\tR\tsourceIdsB\x14Z\x12internal/domain/pbb\x06proto3"

var (
	file_ml_v1_model_proto_rawDescOnce sync.Once
	file_ml_v1_model_proto_rawDescData []byte
)

func file_ml_v1_model_proto_rawDescGZIP() []byte {
	file_ml_v1_model_proto_rawDescOnce.Do(func() {
		file_ml_v1_model_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ml_v1_model_proto_rawDesc), len(file_ml_v1_model_proto_rawDesc)))
	})
	return file_ml_v1_model_proto_rawDescData
}

var file_ml_v1_model_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_ml_v1_model_proto_goTypes = []any{
	(*MultiQuery)(nil),            // 0: pb.ml.MultiQuery
	(*Reranker)(nil),              // 1: pb.ml.Reranker
	(*LlmModel)(nil),              // 2: pb.ml.LlmModel
	(*VectorSearch)(nil),          // 3: pb.ml.VectorSearch
	(*Scenario)(nil),              // 4: pb.ml.Scenario
	(*Query)(nil),                 // 5: pb.ml.Query
	(*ProcessQueryRequest)(nil),   // 6: pb.ml.ProcessQueryRequest
	(*Chunk)(nil),                 // 7: pb.ml.Chunk
	(*ProcessQueryResponse)(nil),  // 8: pb.ml.ProcessQueryResponse
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_ml_v1_model_proto_depIdxs = []int32{
	0, // 0: pb.ml.Scenario.multiQuery:type_name -> pb.ml.MultiQuery
	1, // 1: pb.ml.Scenario.reranker:type_name -> pb.ml.Reranker
	3, // 2: pb.ml.Scenario.vectorSearch:type_name -> pb.ml.VectorSearch
	2, // 3: pb.ml.Scenario.model:type_name -> pb.ml.LlmModel
	9, // 4: pb.ml.Scenario.createdAt:type_name -> google.protobuf.Timestamp
	9, // 5: pb.ml.Scenario.updatedAt:type_name -> google.protobuf.Timestamp
	5, // 6: pb.ml.ProcessQueryRequest.query:type_name -> pb.ml.Query
	4, // 7: pb.ml.ProcessQueryRequest.scenario:type_name -> pb.ml.Scenario
	7, // 8: pb.ml.ProcessQueryResponse.chunk:type_name -> pb.ml.Chunk
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_ml_v1_model_proto_init() }
func file_ml_v1_model_proto_init() {
	if File_ml_v1_model_proto != nil {
		return
	}
	file_ml_v1_model_proto_msgTypes[0].OneofWrappers = []any{}
	file_ml_v1_model_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ml_v1_model_proto_rawDesc), len(file_ml_v1_model_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ml_v1_model_proto_goTypes,
		DependencyIndexes: file_ml_v1_model_proto_depIdxs,
		MessageInfos:      file_ml_v1_model_proto_msgTypes,
	}.Build()
	File_ml_v1_model_proto = out.File
	file_ml_v1_model_proto_goTypes = nil
	file_ml_v1_model_proto_depIdxs = nil
}
